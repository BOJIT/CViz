name: "publish"

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    with:
      ref: ${{ github.event.pull_request.merge_commit_sha }}
      fetch-depth: '0'
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: get proposed tag
        id: get_version
        uses: notiz-dev/github-action-json-property@v0.2.0
        with:
            path: 'src-tauri/tauri.conf.json'
            prop_path: 'package.version'

      - uses: mukunku/tag-exists-action@v1.5.0
        id: check-tag
        with:
          tag: ${{steps.get_version.outputs.prop}}

      - run: echo "Tag exists!" && exit 1
        if: ${{ steps.check-tag.outputs.exists == 'true' }}

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: yarn install # change this to npm or pnpm depending on which one you use

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        with:
          tagName: cviz-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "CViz v__VERSION__"
          releaseBody: "See the assets to download this version and install"
          releaseDraft: true
          prerelease: false

      - name: Push proposed tag to main commit
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: ${{steps.get_version.outputs.prop}}
